generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Post {
    id              String            @id @default(uuid())
    url             String            @unique
    createdAt       DateTime          @default(now())
    title           String
    postCategoryMap PostCategoryMap[]

    @@index([createdAt])
    @@fulltext([title])
}

model CompanyArticle {
    id        String   @id @default(uuid())
    url       String   @unique
    createdAt DateTime @default(now())
    title     String

    @@index([createdAt])
    @@fulltext([title])
}

model PostCategory {
    id              Int               @id @default(autoincrement())
    name            String            @unique
    postCategoryMap PostCategoryMap[]
    FollowCategory  FollowCategory[]
}

model PostCategoryMap {
    id               Int          @id @default(autoincrement())
    post_category    PostCategory @relation(fields: [post_category_id], references: [id])
    post_category_id Int
    post             Post         @relation(fields: [post_id], references: [id])
    post_id          String
    createdAt        DateTime     @default(now())

    @@unique([post_category_id, post_id])
    @@index([post_category_id])
    @@index([post_id])
    @@index([createdAt])
}

model FollowCategory {
    id               String   @id @default(uuid())
    user_id          String
    post_category_id Int
    createdAt        DateTime @default(now())

    user         User         @relation(fields: [user_id], references: [id])
    postCategory PostCategory @relation(fields: [post_category_id], references: [id])

    @@unique([user_id, post_category_id])
    @@index([user_id])
    @@index([post_category_id])
}

model ViewHistory {
    id       String @id @default(uuid())
    post_url String
    user_id  String

    user      User     @relation(fields: [user_id], references: [id])
    createdAt DateTime @default(now())

    @@unique([post_url, user_id])
    @@index([user_id])
}

model UserPost {
    id        String   @id @default(uuid())
    user_id   String
    url       String
    content   String?
    title     String
    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())
    isPublic  Boolean  @default(true)

    user User @relation(fields: [user_id], references: [id])

    @@index([user_id])
    @@index([createdAt])
}

model Trends {
    id         String   @id @default(uuid())
    url        String   @unique
    title      String
    createdAt  DateTime @default(now())
    likedCount Int      @default(0)

    @@index([createdAt])
}

// default
// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model User {
    id             String           @id @default(cuid())
    name           String?
    email          String?          @unique
    emailVerified  DateTime?
    image          String?
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @default(now()) @updatedAt
    introduction   String?
    accounts       Account[]
    ViewHistory    ViewHistory[]
    UserPost       UserPost[]
    FollowCategory FollowCategory[]
}
